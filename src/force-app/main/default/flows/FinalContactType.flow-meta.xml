<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>62.0</apiVersion>
    <assignments>
        <name>AddToUniqueTypeStateCollection</name>
        <label>AddToUniqueTypeStateCollection</label>
        <locationX>1100</locationX>
        <locationY>890</locationY>
        <assignmentItems>
            <assignToReference>UniqueTypeStateCollection</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>TypeStateCombo</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LoopUniqueTypeStateCollection</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignTypeStateCombo</name>
        <label>AssignTypeStateCombo</label>
        <locationX>748</locationX>
        <locationY>350</locationY>
        <assignmentItems>
            <assignToReference>TypeStateCombo</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>TypeStateComboFormula</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>ResetComboExists</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>ResetComboExists</name>
        <label>ResetComboExists</label>
        <locationX>748</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>ComboExists</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LoopUniqueTypeStateCollection</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>SetComboExistsTrue</name>
        <label>SetComboExistsTrue</label>
        <locationX>836</locationX>
        <locationY>782</locationY>
        <assignmentItems>
            <assignToReference>ComboExists</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LoopUniqueTypeStateCollection</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>CheckIfComboExists</name>
        <label>CheckIfComboExists</label>
        <locationX>1034</locationX>
        <locationY>674</locationY>
        <defaultConnector>
            <targetReference>CheckIfNewCombination</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Combo_Exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>LoopUniqueTypeStateCollection</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>TypeStateCombo</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetComboExistsTrue</targetReference>
            </connector>
            <label>Combo Exists</label>
        </rules>
    </decisions>
    <decisions>
        <name>CheckIfNewCombination</name>
        <label>CheckIfNewCombination</label>
        <locationX>1232</locationX>
        <locationY>782</locationY>
        <defaultConnector>
            <targetReference>LoopUniqueTypeStateCollection</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>New_Combination</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ComboExists</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AddToUniqueTypeStateCollection</targetReference>
            </connector>
            <label>New Combination</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>TypeStateComboFormula</name>
        <dataType>String</dataType>
        <expression>TEXT({!LoopThroughContacts.Type__c}) &amp; &quot; &quot; &amp; TEXT({!LoopThroughContacts.State__c})</expression>
    </formulas>
    <interviewLabel>FinalContactType {!$Flow.CurrentDateTime}</interviewLabel>
    <label>FinalContactType</label>
    <loops>
        <name>LoopThroughContacts</name>
        <label>LoopThroughContacts</label>
        <locationX>176</locationX>
        <locationY>242</locationY>
        <collectionReference>GetContacts</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>AssignTypeStateCombo</targetReference>
        </nextValueConnector>
    </loops>
    <loops>
        <name>LoopUniqueTypeStateCollection</name>
        <label>LoopUniqueTypeStateCollection</label>
        <locationX>748</locationX>
        <locationY>566</locationY>
        <collectionReference>UniqueTypeStateCollection</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>CheckIfComboExists</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>LoopThroughContacts</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <name>GetContacts</name>
        <label>GetContacts</label>
        <locationX>176</locationX>
        <locationY>134</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>LoopThroughContacts</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>AccountId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Contact</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>Type__c</queriedFields>
        <queriedFields>State__c</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>GetContacts</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>AccountId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>ComboExists</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>TypeStateCombo</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>UniqueTypeStateCollection</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
</Flow>
